//1
Task

Read  numbers from stdin and print their sum to stdout.

Input Format

One line that contains  space-separated integers: a, b, and c.

Constraints

1 < a,b,c <1000

Output Format

Print the sum of the three numbers on a single line.

For example:
Test 	Input 	Result

tc01

	

1 1 1
3

jawaban:

#include <iostream>

using namespace std;

int main() {
    int a;
    int b;
    int c;

    cin >> a;
    cin >> b;
    cin >> c;

    int sum = a + b + c;
    cout << sum << endl;

    return 0;
}


//2

Diberikan bilangan positif n, lakukan:

    jika 1 < n < 9, cetak dalam huruf kecil angka yang diberikan (misal satu, dua, tiga, dst)
    jika n> 9, cetak Lebih dari 9

Format Input

Sebuah integer n

Format Output

Sesuai deskripsi soal

Constraint

    1 < n < 109

For example:
Test 	Input 	Result

tc01

	

1
satu

jawaban:
#include <iostream>
using namespace std;


void bilangan(int n) {
    if (n > 9) {
        cout << "Lebih dari 9" << endl;
    } else if (n == 1) {
        cout << "satu" << endl;
    } else if (n == 2) {
        cout << "dua" << endl;
    } else if (n == 3) {
        cout << "tiga" << endl;
    } else if (n == 4) {
        cout << "empat" << endl;
    } else if (n == 5) {
        cout << "lima" << endl;
    } else if (n == 6) {
        cout << "enam" << endl;
    } else if (n == 7) {
        cout << "tujuh" << endl;
    } else if (n == 8) {
        cout << "delapan" << endl;
    } else if (n == 9) {
        cout << "sembilan" << endl;
    }
}

//3
Buat sebuah fungsi  tanpa return dengan nama bilangan , dimana parameter fungsi berupa sebuah bilangan positif n, fungsi dapat melakukan :

    jika 1 < n < 9, cetak dalam huruf kecil angka yang diberikan (misal satu, dua, tiga, dst)
    jika n> 9, cetak Lebih dari 9

Berikut struktur fungsinya 

void bilangan(int n){
  
  }

For example:
Test 	Input 	Result

bilangan(1)

	

bilangan(1)

	

satu

jawaban:
#include <iostream>
using namespace std;

void bilangan(int n) {
    if (n > 9) {
        cout << "Lebih dari 9" << endl;
        
    } else if (n == 1) {
        cout << "satu" << endl;
        
    } else if (n == 2) {
        cout << "dua" << endl;
        
    } else if (n == 3) {
        cout << "tiga" << endl;
        
    } else if (n == 4) {
        cout << "empat" << endl;
        
    } else if (n == 5) {
        cout << "lima" << endl;
        
    } else if (n == 6) {
        cout << "enam" << endl;
        
    } else if (n == 7) {
        cout << "tujuh" << endl;
        
    } else if (n == 8) {
        cout << "delapan" << endl;
        
    } else if (n == 9) {
        cout << "sembilan" << endl;
    }
}

//4
Buat program untuk membaca input dari keyboard. Data inputan ditampung ke dalam tipe variabel yang sesuai.

Format Input

Terdiri dari 5 input data a b c d e, yang masing-masing merupakan data dengan tipe integer, long, char, float dan double

Format Output

Cetak tiap elemen  pada baris baru dengan urutan yang sama dengan input.

Catatan: untuk nilai float dicetak hingga 3 tempat desimal, dan untuk nilai double dicetak hingga 9 tempat desimal.

For example:
Test 	Input 	Result

tc01

	

3 12345678912345 a 334.23 14049.30493

	

3
12345678912345
a
334.230
14049.3049300

jawaban:
#include <iostream>
#include <iomanip>
using namespace std;

int main() {
	
	int a;
	long long b;
	char c;
	float d;
	double e;
	
	cin >> a;
	cin >> b;
	cin >> c;
	cin >> d;
	cin >> e;
	
	cout << a << endl;
	cout << b << endl;
	cout << c << endl;
	cout << fixed << setprecision(3) << d << endl;
	cout << fixed << setprecision(9) << e << endl;
		
}

//5
Tulis sebuah fungsi int max_of_four(int a, int b, int c, int d) yang mengembalikan maksimum dari empat argumen yang diterimanya.

For example:
Test 	Input 	Result

int a=3,b=1,c=4,d=0;
cout<<max_of_four(a, b, c, d);

	

int a=3,b=1,c=4,d=0;
cout<<max_of_four(a, b, c, d);

	

4

jawaban:
#include <iostream>

using namespace std;
int max_of_four(int a, int b, int c, int d) {
    
    int max_ab = (a > b) ? a : b;
    
    int max_cd = (c > d) ? c : d;
    
    return (max_ab > max_cd) ? max_ab : max_cd;
}
